<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFdXVyBWVlZgVVVVgFVV
        VYBUVFSvU1NTv1FRUZ9NTU2ASEhIgENDQ4A/Pz9AGRkZJQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP///wD///8A////AP///wAAAAAAAAAAAAAAAAAAAAAAWlpaIFpaWnBZWVnfYmJi/21t
        bf9ubm7/cnJy/3BwcP9qamr/ZWVl/15eXv9UVFT/TU1N/0VFRf89PT3/MTEx3BwcHFsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////AP///wD///8A////AAAAAAAAAAAAXV1dIF1dXZ9kZGT/eXl5/5GR
        kf+Wlpb/kpKS/4yMjP+Ghob/gICA/3l5ef9ycnL/ampq/2JiYv9aWlr/UVFR/0lJSf9QUFD/Nzc39xQU
        FH4AAAAaAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP///wD///8AAAAAAF9fX2BjY2PvhYWF/5yc
        nP+CgoL/n5+f/5qamv+ZmZn/lZWV/4+Pj/+IiIj/gYGB/3l5ef9xcXH/aGho/2BgYP9XV1f/UlJS/2Fh
        Yf9LS0v/LS0twgAAAFcAAAAoAAAAAAAAAAAAAAAAAAAAAP///wD///8A////AP///wBiYmJgbm5u/5yc
        nP+goKD/oKCg/4qKiv/CwsL/nJyc/5qamv+ZmZn/l5eX/5CQkP+IiIj/gICA/3d3d/9vb2//ZmZm/11d
        Xf9aWlr/ZWVl/0tLS/81NTXRAAAARQAAAEEAAAAeAAAAAAAAAAAAAAAA////AP///wD///8A////AGVl
        Zf+cnJz/paWl/6Wlpf+lpaX/lJSU/8HBwf/CwsL/nZ2d/5ubm/+ZmZn/lpaW/4+Pj/+Ghob/fX19/3R0
        dP9ra2v/YWFh/15eXv9paWn/TExM/zg4OLMAAAA0AAAAMQAAACIAAAAAAAAAAAAAAAD///8A////AP//
        /wD///8AaWlp/5ubm/+srKz/rKys/6urq/+ZmZn/s7Oz//j4+P+mpqb/nZ2d/5ubm/+ZmZn/lJSU/4uL
        i/+CgoL/eXl5/29vb/9mZmb/YmJi/2xsbP9QUFD/Ojo6lAAAACYAAAAfAAAABwAAAAAAAAAAAAAAAP//
        /wD///8A////AP///wBubm7/oaGh/7S0tP+0tLT/s7Oz/56env+np6f//f39/9bW1v+fn5//nJyc/5qa
        mv+YmJj/kJCQ/4aGhv99fX3/c3Nz/2lpaf9ra2v/bm5u/1BQUP8/Pz9/AAAAGgAAAA4AAAAIAAAABAAA
        AAIAAAAA////AP///wD///8A////AHNzc++oqKj/vLy8/729vf+7u7v/qKio/5ycnP/7+/v//////62t
        rf+enp7/m5ub/5mZmf+Tk5P/ioqK/4CAgP92dnb/bGxs/29vb/9wcHD/UFBQ/z4+Pk0AAAAQAAAADwAA
        AA0AAAALAAAACgAAAAf///8A////AP///wD///8AeHh4v6Ojo//Gxsb/x8fH/8TExP+9vb3/kJCQ//n5
        +f//////6Ojo/5+fn/+cnJz/mpqa/5aWlv+MjIz/goKC/3h4eP9ubm7/dXV1/21tbf9TU1P/AAAACwAA
        AAkAAAAIAAAABgAAAAQAAAADAAAAAf///wD///8A////AP///wB+fn6PnJyc/8/Pz//S0tL/y8vL/8LC
        wv+Hh4f/9vb2////////////ycnJ/5ycnP+ampr/l5eX/42Njf+Dg4P/eXl5/3BwcP98fHz/aWlp/1RU
        VJ8AAAAAAAAAAQAAAAEAAAAAAAAAAAAAAAAAAAAA////AP///wD///8A////AIODg0CPj4//0dHR/9XV
        1f/Nzc3/w8PD/319ff/x8fH////////////5+fn/o6Oj/5qamv+Xl5f/jY2N/4ODg/95eXn/fHx8/3x8
        fP9eXl7/VVVVQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD///8A////AP///wD///8AAAAAAIyM
        jL+np6f/zMzM/8fHx//AwMD/hISE/9/n7P/A5f3/7ff9///////U1NT/mpqa/5aWlv+NjY3/g4OD/4OD
        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
        B//8AAf//AAH//wAB//8AA///gAP///AP/8=
</value>
  </data>
</root>